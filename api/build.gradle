plugins {
    id 'java-library'
    id 'maven'
    id 'maven-publish'
    id 'com.jfrog.bintray' version '1.8.5'
}

sourceCompatibility = 15
targetCompatibility = 15

archivesBaseName = 'andesite-api'

repositories {
    jcenter()
    maven { url 'https://dl.bintray.com/natanbc/maven' }
    maven { url 'https://jitpack.io' }
}

import org.gradle.external.javadoc.StandardJavadocDocletOptions

javadoc {
    failOnError = false
    options.encoding = "UTF-8"
    options.addBooleanOption('html5', true)
    options.addStringOption('Xdoclint:none', '-quiet')
    //options.addBooleanOption("-no-module-directories", true)
    if(options instanceof StandardJavadocDocletOptions) {
        options
                .linkSource()
                .keyWords()
                .use()
                .noDeprecated()
                .links(
                    "https://vertx.io/docs/apidocs/",
                    "https://www.javadoc.io/doc/com.google.code.findbugs/jsr305/$jsr305Version/",
                    "https://natanbc.github.io/lavadsp/"
                )
                .charSet("UTF-8")
                .docEncoding("UTF-8")
                .jFlags("-Dhttp.agent=javadoc")
    }
}

dependencies {
    //Config
    api "com.typesafe:config:$configVersion"

    //REST, WebSocket, etc
    api "io.vertx:vertx-web:$vertxWebVersion"

    //Audio player
    api "com.github.Devoxin:lavaplayer:$lavaplayerVersion"

    //Audio filters
    api "com.github.natanbc:lavadsp:$lavadspVersion"

    //Code safety
    api "com.google.code.findbugs:jsr305:$jsr305Version"
}

task sourceJar(type: Jar) {
    classifier "sources"
    from sourceSets.main.allJava
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier "javadoc"
    from javadoc.destinationDir
}

publishing {
    publications {
        BintrayRelease(MavenPublication) {
            from components.java
            groupId 'com.github.natanbc'
            artifactId 'andesite-api'

            artifact sourceJar
            artifact javadocJar
        }
    }
}

bintray {
    version = project.version
    user = getProjectProperty("BINTRAY_USERNAME")
    key = getProjectProperty("BINTRAY_API_KEY")
    publications = ["BintrayRelease"]
    pkg {
        repo = 'maven'
        name = 'andesite-api'
        licenses = ['MIT']
        vcsUrl = 'https://github.com/natanbc/andesite-node.git'
        publish = true
        version {
            name = project.version.toString()
            released = new Date()
        }
    }
}

String getProjectProperty(String propertyName) {
    String property;
    if(hasProperty(propertyName)) {
        property = project.properties[propertyName]
    } else {
        property = System.getenv(propertyName) ?: ""
    }
    return property
}

bintrayUpload {
    dependsOn build

    onlyIf { !getProjectProperty("BINTRAY_USERNAME").empty }
    onlyIf { !getProjectProperty("BINTRAY_API_KEY").empty }
}
